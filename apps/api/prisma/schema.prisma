datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  uid       String   @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name  String?
  image String?

  Credentials  Credentials?
  Todo         Todo[]
  Admin        Admin[]
  AuthProvider AuthProvider[]
  UserRole     UserRole[]
}

model Admin {
  uid  String @id
  User User   @relation(fields: [uid], references: [uid], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Credentials {
  uid  String @id
  User User   @relation(fields: [uid], references: [uid], onDelete: Cascade)

  email        String @unique
  passwordHash String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Todo {
  uid       String   @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title   String
  content String?

  User    User?   @relation(fields: [userUid], references: [uid], onDelete: Cascade)
  userUid String?
}

model AuthProvider {
  uid String @id

  type AuthProviderType
  User User             @relation(fields: [uid], references: [uid], onDelete: Cascade)
}

enum AuthProviderType {
  GOOGLE
  CREDENTIALS
}

model Role {
  uid Int @id @default(autoincrement())

  name           String           @unique
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  RolePermission RolePermission[]
  UserRole       UserRole[]
}

model UserRole {
  userId String
  roleId Int

  User User @relation(fields: [userId], references: [uid], onDelete: Cascade)
  Role Role @relation(fields: [roleId], references: [uid], onDelete: Cascade)

  @@unique([userId, roleId])
}

model Permission {
  uid Int @id @default(autoincrement())

  name        String  @unique
  description String?

  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  RolePermission RolePermission[]
}

model RolePermission {
  roleId       Int
  permissionId Int

  Role       Role       @relation(fields: [roleId], references: [uid], onDelete: Cascade)
  Permission Permission @relation(fields: [permissionId], references: [uid], onDelete: Cascade)

  @@id([roleId, permissionId])
}
